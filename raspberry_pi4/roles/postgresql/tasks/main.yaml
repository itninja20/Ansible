---
- name: Install and configure PostgreSQL
  hosts: all
  become: yes
  vars:
    postgres_version: "12" # Change this to the desired PostgreSQL version
    postgres_data_directory: "/var/lib/pgsql/{{ postgres_version }}/data" # Change this to the desired data directory
  tasks:
    - name: Install PostgreSQL on CentOS
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      loop:
        - "postgresql"
        - "postgresql-contrib"
        - "postgresql-server"
      when: ansible_os_family == 'RedHat'

    - name: Install PostgreSQL on Debian/Ubuntu
      ansible.builtin.package:
        name: postgresql
        state: present
      when: ansible_os_family == 'Debian'

    - name: Install PostgreSQL on Raspberry Pi
      ansible.builtin.package:
        name: postgresql
        state: present
      when: ansible_distribution == 'Raspbian'

    - name: Ensure PostgreSQL service is started and enabled on CentOS
      ansible.builtin.service:
        name: "postgresql-{{ postgres_version }}"
        state: started
        enabled: yes
      when: ansible_os_family == 'RedHat'

    - name: Ensure PostgreSQL service is started and enabled on Debian/Ubuntu
      ansible.builtin.service:
        name: postgresql
        state: started
        enabled: yes
      when: ansible_os_family == 'Debian'

    - name: Ensure PostgreSQL service is started and enabled on Raspberry Pi
      ansible.builtin.service:
        name: postgresql
        state: started
        enabled: yes
      when: ansible_distribution == 'Raspbian'

    - name: Initialize PostgreSQL database on CentOS
      ansible.builtin.shell:
        cmd: "/usr/pgsql-{{ postgres_version }}/bin/postgresql-{{ postgres_version }}-setup initdb"
      when: ansible_os_family == 'RedHat'

    - name: Initialize PostgreSQL database on Debian/Ubuntu
      ansible.builtin.shell:
        cmd: "pg_ctlcluster {{ postgres_version }} main start && pg_ctlcluster {{ postgres_version }} main stop"
      when: ansible_os_family == 'Debian'

    - name: Initialize PostgreSQL database on Raspberry Pi
      ansible.builtin.shell:
        cmd: "pg_ctlcluster {{ postgres_version }} main start && pg_ctlcluster {{ postgres_version }} main stop"
      when: ansible_distribution == 'Raspbian'

    - name: Configure PostgreSQL listen address
      ansible.builtin.lineinfile:
        path: "{{ postgres_data_directory }}/postgresql.conf"
        regexp: "^#?listen_addresses = 'localhost'"
        line: "listen_addresses = '*'"
        state: present
      notify: restart postgresql

    - name: Allow PostgreSQL connections through firewall (CentOS)
      ansible.builtin.firewalld:
        service: postgresql
        state: enabled
        immediate: yes
      when: ansible_os_family == 'RedHat'

    - name: Restart PostgreSQL service
      ansible.builtin.service:
        name: "postgresql-{{ postgres_version }}"
        state: restarted
      when: ansible_distribution == 'Raspbian' or ansible_os_family == 'RedHat' 

  handlers:
    - name: restart postgresql
      ansible.builtin.service:
        name: "postgresql-{{ postgres_version }}"
        state: restarted
